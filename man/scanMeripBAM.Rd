% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/scanMeripBAM.R
\name{scanMeripBAM}
\alias{scanMeripBAM}
\title{Scan the BAM files of a MeRIP-seq experiment.}
\usage{
scanMeripBAM(bam_ip = NULL, bam_input = NULL, bam_treated_ip = NULL,
  bam_treated_input = NULL, paired_end = FALSE, random_primer = TRUE,
  index_bam = TRUE, bam_files = NULL, design_ip = NULL,
  design_treatment = NULL, mapq = 30L, isSecondaryAlignment = FALSE,
  isNotPassingQualityControls = FALSE, isDuplicate = FALSE, isPaired = NA,
  isProperPair = NA, hasUnmappedMate = NA, ...)
}
\arguments{
\item{bam_ip}{a character vector of the BAM file directories for the IP samples.}

\item{bam_input}{a character vector of the BAM file directories for the input samples.}

\item{bam_treated_ip}{a character vector of the BAM file directories for the IP samples in treated group.}

\item{bam_treated_input}{a character vector of the BAM file directories for the input samples in treated group.

If the dataset does not contain the extra design of treatment (such as the perturbation of the regulators), please fill only the \code{BAM_ip} and \code{BAM_input} arguments.}

\item{paired_end}{a logical value indicating the library types, TRUE if the read is from paired end library, otherwise it will be treated as the single end reads.}

\item{random_primer}{a logical value indicating whether the library used is strand specific, default to be FALSE.}

\item{index_bam}{a logical value indicating whether to create BAM indexes automatically.

The BAM index files will be named by adding ".bai" after the names of corresponding BAM files.}

\item{bam_files}{an optional character string of all the BAM files to be analyzed, if it is provided, the first 4 arguments above will be ignored.}

\item{design_ip}{an optional logical vector indicating the design of IP and input, with TRUE represents for IP.}

\item{design_treatment}{an optional logical vector indicating the design of treatment and control, with TRUE represents for treated samples.}

\item{mapq}{A non-negative integer specifying the minimum mapping quality to include. BAM records with mapping qualities less than mapq are discarded.}

\item{isSecondaryAlignment, isNotPassingQualityControls, isDuplicate, ...}{arguments that determine the sam flag filtering, inherited from \code{\link{ScanBAMParam}}.}
}
\value{
This function will return a list with 2 named elements: BAMList and Parameter.
}
\description{
\code{scanMeripBAM} is used to check and organize the BAM files in MeRIP-seq data before peak calling,
the flag parameters for the filtering can be defined at this step.
}
\details{
The function takes the input of MeRIP-seq BAM files directories.
The provided BAM files are checked, and the design information of IP over input and treated over untreated are stored in the output.
}
\examples{
MeRIP_Seq_Alignment <- scanMeripBAM(
                            bam_ip = c("./bam/SRR1182619.bam",
                                     "./bam/SRR1182621.bam",
                                     "./bam/SRR1182623.bam"),
                            bam_input = c("./bam/SRR1182620.bam",
                                          "./bam/SRR1182622.bam",
                                          "./bam/SRR1182624.bam"),
                            bam_treated_ip = c("./bam/SRR1182603.bam",
                                               "./bam/SRR1182605.bam"),
                            bam_treated_input = c("./bam/SRR1182604.bam",
                                                  "./bam/SRR1182606.bam"),
                            paired_end = TRUE
                            )

###It will provide identical result with the following arguments:

MeRIP_Seq_Alignment2 <- scanMeripBAM(
                             bam_files = c("./bam/SRR1182619.bam",
                                           "./bam/SRR1182621.bam",
                                           "./bam/SRR1182623.bam",
                                           "./bam/SRR1182620.bam",
                                           "./bam/SRR1182622.bam",
                                           "./bam/SRR1182624.bam",
                                           "./bam/SRR1182603.bam",
                                           "./bam/SRR1182605.bam",
                                           "./bam/SRR1182604.bam",
                                           "./bam/SRR1182606.bam"),
                             design_ip = metadata(MeRIP_Seq_Alignment[[1]])$design_IP,
                             design_treatment = metadata(MeRIP_Seq_Alignment[[1]])$design_Treatment,
                             paired_end = TRUE
                             )

identical(MeRIP_Seq_Alignment, MeRIP_Seq_Alignment2)

}
\seealso{
\code{\link{merip_peak_calling}}
}
